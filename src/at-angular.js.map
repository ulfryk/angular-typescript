{"version":3,"sources":["../src/at-angular.ts"],"names":[],"mappings":"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","file":"at-angular.js","sourcesContent":["import 'angular';\nimport 'ts-helpers';\nimport IModule = angular.IModule;\nimport IDirective = angular.IDirective;\nimport IComponentOptions = angular.IComponentOptions;\n\nexport function attachInjects(target: any, ...args: any[]): any {\n  (target.$inject || []).forEach((item: string, index: number) => {\n    target.prototype[item] = args[index];\n  });\n  return target;\n}\n\nexport function Inject(...args: string[]) {\n  return (target: any, key?: string, index?: number): void => {\n    if (angular.isNumber(index)) {\n      target.$inject = target.$inject || [];\n      target.$inject[index] = args[0];\n    } else {\n      target.$inject = args;\n    }\n  };\n}\n\nexport function Service() {\n  return (target): void => {\n    target.__$$declare = (module: IModule) => {\n      module.service(target.name, target);\n    };\n  };\n}\n\nexport function Controller() {\n  return (target): void => {\n    target.__$$declare = (module: IModule) => {\n      module.controller(target.name, target);\n    };\n  };\n}\n\nexport function Directive(config: IDirective) {\n  return (target): void => {\n    config.controller = target;\n    target.__$$declare = (module: IModule) => {\n      module.directive(config.name, () => (config));\n    };\n  };\n}\n\nexport function Factory() {\n  return (target: any): void => {\n    function factory(...args: any[]): any {\n      return attachInjects(target, ...args);\n    }\n\n    if (target.$inject && target.$inject.length > 0) {\n      factory.$inject = target.$inject.slice(0);\n    }\n    target.__$$declare = (module: IModule) => {\n      module.factory(target.name, factory);\n    };\n  };\n}\n\nexport interface IComponentConfig extends IComponentOptions {\n  name: string;\n}\n\nexport function Component(config: IComponentConfig) {\n  return (target: any): void => {\n    config.controller = target;\n    target.__$$declare = (module: IModule) => {\n      module.component(config.name, config);\n    };\n  };\n}\n\nexport function autoDeclare(name: string,\n                            requires: string[],\n                            injectables: Array<any>,\n                            configFn?: Function): IModule {\n  let module = angular.module(name, requires, configFn);\n  injectables.forEach(injectable => {\n    injectable.__$$declare(module);\n  });\n  return module;\n}\n"],"sourceRoot":" "}